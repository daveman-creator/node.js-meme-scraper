// get html(URL)
// const htmlcontent = ()
// create a writable stream, to write data to a file
import { createWriteStream, mkdir } from 'node:fs';
// to direct the images into the correct folder
import path from 'node:path/posix';
// to get the html and the image data
import axios from 'axios';

/ const URL = memes '(https://memegen-link-examples-upleveled.netlify.app/')

// request the html data from the website and store it as a string
const res = await axios.get(
  'https://memegen-link-examples-upleveled.netlify.app/',
);
const htmlString = res.data;

// convert the string html into an array. elements start off with the image source links
const htmlArray = htmlString.split('src="');

// loop over the array, to find the first index of each end quote (")
// cut off the string at this point and store the shorter strings in a new array
const srcArr = [];
for (const item of htmlArray) {
  const index = item.indexOf('"');
  srcArr.push(item.slice(0, index));
}

// remove the first 2 elements of the array, these are not an img src
srcArr.shift();
srcArr.shift();

// create a folder for the memes
const folder = () => {
  mkdir(path.join('memes'), { recursive: true }, (err) => {
    if (err) {
      return console.error(err);
    }
  });
};
folder();

// write a loop. each src url is 1) downloaded 2) named 3) stored in memes folder
for (let i = 0; i < 10; i++) {
  // 1)
  const download = await axios({
    url: srcArr[i],
    method: 'GET',
    responseType: 'stream',
  });

  const imgName = i < 9 ? `0${i + 1}.jpg` : `${i + 1}.jpg`; // 2)

  const filePath = path.resolve('./memes', imgName);
  download.data.pipe(createWriteStream(filePath)); // 3)

  // log the download progress
  console.log(i + 1 + ' of 10');
}



// 0. Import all the required packages
const fs = require('node:fs');
const cliProgress = require('cli-progress');
const colors = require('colors');
const fetch = require('node-fetch');
// 1. Configure Progress Bar
const progessBar = new cliProgress.SingleBar(
  {
    format: '|' + colors.red('{bar}') + '| {value}/{total} Memes',
    fps: 3,
    clearOnComplete: false,
  },
  cliProgress.Presets.shades_classic,
);
// 2. Download  memes and put them in the required directory
async function downloadMemes(urlList) {
  const folderName = './memes';
  // Check if directory exists
  if (!fs.existsSync(folderName)) {
    fs.mkdir(folderName, (err) => {
      if (err) {
        console.log(err);
      }
    });
  }
  // Download meme/memes and put them in the direcotry
  for (let i = 0; i < (urlList.length === 1 ? 1 : 10); i++) {
    let file = '';
    // Check if meme list or custom meme depending on array length
    if (urlList.length === 1) {
      file = fs.createWriteStream(`${folderName}/custom-meme.jpg`);
    } else {
      file = fs.createWriteStream(`${folderName}/memes${i + 1}.jpg`);
    }
    const fetchedImg = await fetch(urlList[i], (err) => {
      if (err) {
        console.log(err);
      }
    });
    fetchedImg.body.pipe(file, (err) => {
      console.log(err);
    });
    progessBar.increment(1);
  }
  progessBar.stop();
  if (urlList.length === 1) {
    console.log('Successfully downloaded the custom meme!');
  } else {
    console.log('Successfully downloaded all required files!');
  }
}
// 3. Fetch all memes and put them in an array
async function createMemeList() {
  // Start Progress Bar
  console.log('Downloading files...');
  progessBar.start(10, 0);
  const response = await fetch(
    'https://memegen-link-examples-upleveled.netlify.app/',
  );
  const body = await response.text();
  // Extract Image Urls from HTML string
  const foundUrls = body.match(/https:\/\/api\.memegen\.link\/images.*\.jpg/g);
  // Filter  Urls that exist twice
  const filteredFoundUrls = foundUrls.filter((el, index) => {
    return foundUrls.indexOf(el) === index;
  });
  downloadMemes(filteredFoundUrls);
}
// 4. Create Custom Meme
function createCustomMeme() {
  // Start Progress Bar
  console.log('Creating and downloading custom meme...');
  progessBar.start(1, 0);

  const template = process.argv[2];
  const text1 = process.argv[3];
  const text2 = process.argv[4];
  const template = process.argv[4];
  const text1 = process.argv[2];
  const text2 = process.argv[3];

  const customMemeUrl = [
    `https://api.memegen.link/images/${template}/${text1}/%20${text2}.jpg`,





    import fetch from 'node-fetch';

//I created a variable for the Url
const URL =  memes 'https://memegen-link-examples-upleveled.netlify.app/';

//I fetched
const fetch = await html.get(https://memegen-link-examples-upleveled.netlify.app/'
)
  .then((response) => {
    console.log (response.data),
    // Do something with response
  })

  .catch((err) => {
    console.log(err);
});
  const htmlContent = '';
  const htmlString = res.data;

  const htmlArray = htmlString.split('src="');

  const srcArr = [<img src="https://api.memegen.link/images/ackbar/_/it's_a_trap!.jpg?width=300"></img>];
for (const item of htmlArray) {
  const index = item.indexOf('"');
  srcArr.push(item.slice(0, index));
}
